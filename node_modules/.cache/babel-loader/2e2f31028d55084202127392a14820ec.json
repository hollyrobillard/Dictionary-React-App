{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Owner\\\\Documents\\\\GitHub\\\\Dictionary-React-App\\\\src\\\\Phonetics.js\";\nimport React from \"react\";\nimport \"./Phonetics.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Phonetics(props) {\n  console.log(props.phonetics[0].audio);\n\n  if (props.phonetics) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Phonetics\",\n      children: props.phonetics.map((phonetic, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"phonetic-text\",\n            children: phonetic.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 12,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: phonetic.audio,\n            target: \"_blank\",\n            rel: \"noreferrer\",\n            children: \"Listen\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 12,\n            columnNumber: 83\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this);\n  } else {\n    return null;\n  }\n}\n_c = Phonetics;\n\nvar _c;\n\n$RefreshReg$(_c, \"Phonetics\");","map":{"version":3,"names":["React","Phonetics","props","console","log","phonetics","audio","map","phonetic","index","text"],"sources":["C:/Users/Owner/Documents/GitHub/Dictionary-React-App/src/Phonetics.js"],"sourcesContent":["import React from \"react\";\r\nimport \"./Phonetics.css\";\r\n\r\nexport default function Phonetics(props) {\r\n    console.log(props.phonetics[0].audio)\r\n    if (props.phonetics) {\r\n        return(\r\n            <div className=\"Phonetics\">\r\n                {props.phonetics.map((phonetic, index) => {\r\n                    return(\r\n                        <div key={index}>\r\n                            <span className=\"phonetic-text\">{phonetic.text}</span><a href={phonetic.audio} target=\"_blank\" rel=\"noreferrer\">Listen</a>\r\n                            <br />\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n        );\r\n    } else {\r\n        return null;\r\n    }\r\n}\r\n\r\n\r\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,iBAAP;;AAEA,eAAe,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;EACrCC,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,SAAN,CAAgB,CAAhB,EAAmBC,KAA/B;;EACA,IAAIJ,KAAK,CAACG,SAAV,EAAqB;IACjB,oBACI;MAAK,SAAS,EAAC,WAAf;MAAA,UACKH,KAAK,CAACG,SAAN,CAAgBE,GAAhB,CAAoB,CAACC,QAAD,EAAWC,KAAX,KAAqB;QACtC,oBACI;UAAA,wBACI;YAAM,SAAS,EAAC,eAAhB;YAAA,UAAiCD,QAAQ,CAACE;UAA1C;YAAA;YAAA;YAAA;UAAA,QADJ,eAC0D;YAAG,IAAI,EAAEF,QAAQ,CAACF,KAAlB;YAAyB,MAAM,EAAC,QAAhC;YAAyC,GAAG,EAAC,YAA7C;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAD1D,eAEI;YAAA;YAAA;YAAA;UAAA,QAFJ;QAAA,GAAUG,KAAV;UAAA;UAAA;UAAA;QAAA,QADJ;MAMH,CAPA;IADL;MAAA;MAAA;MAAA;IAAA,QADJ;EAYH,CAbD,MAaO;IACH,OAAO,IAAP;EACH;AACJ;KAlBuBR,S"},"metadata":{},"sourceType":"module"}