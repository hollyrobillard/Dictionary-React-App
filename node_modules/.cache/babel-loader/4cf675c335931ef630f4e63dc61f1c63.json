{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Owner\\\\Documents\\\\GitHub\\\\Dictionary-React-App\\\\src\\\\Dictionary.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./Dictionary.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Dictionary(props) {\n  _s();\n\n  const [word, setWord] = useState(props.defaultWord);\n\n  function search(event) {\n    event.preventDefault();\n  }\n\n  function updateWordChange(event) {\n    setWord(event.target.value);\n    console.log(event.target.value);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Dictionary\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Looking for that Word?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Dictionary Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: search,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"search\",\n        className: \"search\",\n        onChange: updateWordChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        className: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Dictionary, \"cFOfAe13y1xblKBfCblzTTKFnV4=\");\n\n_c = Dictionary;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dictionary\");","map":{"version":3,"names":["React","useState","Dictionary","props","word","setWord","defaultWord","search","event","preventDefault","updateWordChange","target","value","console","log"],"sources":["C:/Users/Owner/Documents/GitHub/Dictionary-React-App/src/Dictionary.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./Dictionary.css\";\r\n\r\nexport default function Dictionary(props) {\r\n    const [word, setWord] = useState(props.defaultWord);\r\n    \r\n    function search(event) {\r\n        event.preventDefault();\r\n    }\r\n\r\n    function updateWordChange(event) {\r\n        setWord(event.target.value);\r\n        console.log(event.target.value)\r\n    }\r\n    \r\n    return (\r\n        <div className=\"Dictionary\">\r\n            <h1>Looking for that Word?</h1>\r\n            <h2>Dictionary Search</h2>\r\n            <form onSubmit={search}>\r\n                <input type=\"search\" className=\"search\" onChange={updateWordChange}/>\r\n                <input type=\"submit\" className=\"submit\" />\r\n            </form>\r\n        </div>\r\n    );\r\n}"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,kBAAP;;AAEA,eAAe,SAASC,UAAT,CAAoBC,KAApB,EAA2B;EAAA;;EACtC,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAACE,KAAK,CAACG,WAAP,CAAhC;;EAEA,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;IACnBA,KAAK,CAACC,cAAN;EACH;;EAED,SAASC,gBAAT,CAA0BF,KAA1B,EAAiC;IAC7BH,OAAO,CAACG,KAAK,CAACG,MAAN,CAAaC,KAAd,CAAP;IACAC,OAAO,CAACC,GAAR,CAAYN,KAAK,CAACG,MAAN,CAAaC,KAAzB;EACH;;EAED,oBACI;IAAK,SAAS,EAAC,YAAf;IAAA,wBACI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ,eAGI;MAAM,QAAQ,EAAEL,MAAhB;MAAA,wBACI;QAAO,IAAI,EAAC,QAAZ;QAAqB,SAAS,EAAC,QAA/B;QAAwC,QAAQ,EAAEG;MAAlD;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAO,IAAI,EAAC,QAAZ;QAAqB,SAAS,EAAC;MAA/B;QAAA;QAAA;QAAA;MAAA,QAFJ;IAAA;MAAA;MAAA;MAAA;IAAA,QAHJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAUH;;GAtBuBR,U;;KAAAA,U"},"metadata":{},"sourceType":"module"}